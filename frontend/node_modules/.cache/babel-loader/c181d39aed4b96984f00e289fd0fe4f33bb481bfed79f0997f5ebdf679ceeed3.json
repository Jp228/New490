{"ast":null,"code":"import * as Stomp from 'stompjs';\nlet stompClient = null;\nexport const connectToRabbitMQ = () => {\n  const socket = new WebSocket('ws://192.168.192.211:15674/ws');\n  stompClient = Stomp.over(socket);\n  stompClient.connect({\n    login: \"admin\",\n    passcode: \"admin\"\n  }, () => {\n    console.log('Connected to RabbitMQ');\n    // Additional setup if needed\n  });\n};\nexport const sendMessage = (destination, message) => {\n  if (stompClient && stompClient.connected) {\n    stompClient.send(destination, {}, message);\n  } else {\n    console.error('Not connected to RabbitMQ');\n  }\n};\nexport const subscribeToQueue = (destination, callback) => {\n  if (stompClient && stompClient.connected) {\n    stompClient.subscribe(destination, callback);\n  } else {\n    console.error('Not connected to RabbitMQ');\n  }\n};","map":{"version":3,"names":["Stomp","stompClient","connectToRabbitMQ","socket","WebSocket","over","connect","login","passcode","console","log","sendMessage","destination","message","connected","send","error","subscribeToQueue","callback","subscribe"],"sources":["/home/jp228/Desktop/New490/frontend/src/rabbitMQService.js"],"sourcesContent":["import * as Stomp from 'stompjs';\n\nlet stompClient = null;\n\nexport const connectToRabbitMQ = () => {\n    const socket = new WebSocket('ws://192.168.192.211:15674/ws');\n    stompClient = Stomp.over(socket);\n    stompClient.connect({ login: \"admin\", passcode: \"admin\" }, () => {\n        console.log('Connected to RabbitMQ');\n        // Additional setup if needed\n    });\n};\n\nexport const sendMessage = (destination, message) => {\n    if (stompClient && stompClient.connected) {\n        stompClient.send(destination, {}, message);\n    } else {\n        console.error('Not connected to RabbitMQ');\n    }\n};\n\nexport const subscribeToQueue = (destination, callback) => {\n    if (stompClient && stompClient.connected) {\n        stompClient.subscribe(destination, callback);\n    } else {\n        console.error('Not connected to RabbitMQ');\n    }\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,SAAS;AAEhC,IAAIC,WAAW,GAAG,IAAI;AAEtB,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EACnC,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,+BAA+B,CAAC;EAC7DH,WAAW,GAAGD,KAAK,CAACK,IAAI,CAACF,MAAM,CAAC;EAChCF,WAAW,CAACK,OAAO,CAAC;IAAEC,KAAK,EAAE,OAAO;IAAEC,QAAQ,EAAE;EAAQ,CAAC,EAAE,MAAM;IAC7DC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC;EACJ,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,WAAW,EAAEC,OAAO,KAAK;EACjD,IAAIZ,WAAW,IAAIA,WAAW,CAACa,SAAS,EAAE;IACtCb,WAAW,CAACc,IAAI,CAACH,WAAW,EAAE,CAAC,CAAC,EAAEC,OAAO,CAAC;EAC9C,CAAC,MAAM;IACHJ,OAAO,CAACO,KAAK,CAAC,2BAA2B,CAAC;EAC9C;AACJ,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGA,CAACL,WAAW,EAAEM,QAAQ,KAAK;EACvD,IAAIjB,WAAW,IAAIA,WAAW,CAACa,SAAS,EAAE;IACtCb,WAAW,CAACkB,SAAS,CAACP,WAAW,EAAEM,QAAQ,CAAC;EAChD,CAAC,MAAM;IACHT,OAAO,CAACO,KAAK,CAAC,2BAA2B,CAAC;EAC9C;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}