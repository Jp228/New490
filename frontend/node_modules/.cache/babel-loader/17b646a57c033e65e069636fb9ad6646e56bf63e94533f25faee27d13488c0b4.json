{"ast":null,"code":"/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function (define) {\n  'use strict';\n\n  define(function () {\n    // Credit to Twisol (https://github.com/Twisol) for suggesting\n    // this type of extensible queue + trampoline approach for next-tick conflation.\n\n    /**\n     * Async task scheduler\n     * @param {function} async function to schedule a single async function\n     * @constructor\n     */\n    function Scheduler(async) {\n      this._async = async;\n      this._running = false;\n      this._queue = new Array(1 << 16);\n      this._queueLen = 0;\n      this._afterQueue = new Array(1 << 4);\n      this._afterQueueLen = 0;\n      var self = this;\n      this.drain = function () {\n        self._drain();\n      };\n    }\n\n    /**\n     * Enqueue a task\n     * @param {{ run:function }} task\n     */\n    Scheduler.prototype.enqueue = function (task) {\n      this._queue[this._queueLen++] = task;\n      this.run();\n    };\n\n    /**\n     * Enqueue a task to run after the main task queue\n     * @param {{ run:function }} task\n     */\n    Scheduler.prototype.afterQueue = function (task) {\n      this._afterQueue[this._afterQueueLen++] = task;\n      this.run();\n    };\n    Scheduler.prototype.run = function () {\n      if (!this._running) {\n        this._running = true;\n        this._async(this.drain);\n      }\n    };\n\n    /**\n     * Drain the handler queue entirely, and then the after queue\n     */\n    Scheduler.prototype._drain = function () {\n      var i = 0;\n      for (; i < this._queueLen; ++i) {\n        this._queue[i].run();\n        this._queue[i] = void 0;\n      }\n      this._queueLen = 0;\n      this._running = false;\n      for (i = 0; i < this._afterQueueLen; ++i) {\n        this._afterQueue[i].run();\n        this._afterQueue[i] = void 0;\n      }\n      this._afterQueueLen = 0;\n    };\n    return Scheduler;\n  });\n})(typeof define === 'function' && define.amd ? define : function (factory) {\n  module.exports = factory();\n});","map":{"version":3,"names":["define","Scheduler","async","_async","_running","_queue","Array","_queueLen","_afterQueue","_afterQueueLen","self","drain","_drain","prototype","enqueue","task","run","afterQueue","i","amd","factory","module","exports"],"sources":["/home/jp228/node_modules/when/lib/Scheduler.js"],"sourcesContent":["/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\t// Credit to Twisol (https://github.com/Twisol) for suggesting\n\t// this type of extensible queue + trampoline approach for next-tick conflation.\n\n\t/**\n\t * Async task scheduler\n\t * @param {function} async function to schedule a single async function\n\t * @constructor\n\t */\n\tfunction Scheduler(async) {\n\t\tthis._async = async;\n\t\tthis._running = false;\n\n\t\tthis._queue = new Array(1<<16);\n\t\tthis._queueLen = 0;\n\t\tthis._afterQueue = new Array(1<<4);\n\t\tthis._afterQueueLen = 0;\n\n\t\tvar self = this;\n\t\tthis.drain = function() {\n\t\t\tself._drain();\n\t\t};\n\t}\n\n\t/**\n\t * Enqueue a task\n\t * @param {{ run:function }} task\n\t */\n\tScheduler.prototype.enqueue = function(task) {\n\t\tthis._queue[this._queueLen++] = task;\n\t\tthis.run();\n\t};\n\n\t/**\n\t * Enqueue a task to run after the main task queue\n\t * @param {{ run:function }} task\n\t */\n\tScheduler.prototype.afterQueue = function(task) {\n\t\tthis._afterQueue[this._afterQueueLen++] = task;\n\t\tthis.run();\n\t};\n\n\tScheduler.prototype.run = function() {\n\t\tif (!this._running) {\n\t\t\tthis._running = true;\n\t\t\tthis._async(this.drain);\n\t\t}\n\t};\n\n\t/**\n\t * Drain the handler queue entirely, and then the after queue\n\t */\n\tScheduler.prototype._drain = function() {\n\t\tvar i = 0;\n\t\tfor (; i < this._queueLen; ++i) {\n\t\t\tthis._queue[i].run();\n\t\t\tthis._queue[i] = void 0;\n\t\t}\n\n\t\tthis._queueLen = 0;\n\t\tthis._running = false;\n\n\t\tfor (i = 0; i < this._afterQueueLen; ++i) {\n\t\t\tthis._afterQueue[i].run();\n\t\t\tthis._afterQueue[i] = void 0;\n\t\t}\n\n\t\tthis._afterQueueLen = 0;\n\t};\n\n\treturn Scheduler;\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n"],"mappings":"AAAA;AACA;AACA;;AAEC,WAASA,MAAM,EAAE;EAAE,YAAY;;EAChCA,MAAM,CAAC,YAAW;IAEjB;IACA;;IAEA;AACD;AACA;AACA;AACA;IACC,SAASC,SAASA,CAACC,KAAK,EAAE;MACzB,IAAI,CAACC,MAAM,GAAGD,KAAK;MACnB,IAAI,CAACE,QAAQ,GAAG,KAAK;MAErB,IAAI,CAACC,MAAM,GAAG,IAAIC,KAAK,CAAC,CAAC,IAAE,EAAE,CAAC;MAC9B,IAAI,CAACC,SAAS,GAAG,CAAC;MAClB,IAAI,CAACC,WAAW,GAAG,IAAIF,KAAK,CAAC,CAAC,IAAE,CAAC,CAAC;MAClC,IAAI,CAACG,cAAc,GAAG,CAAC;MAEvB,IAAIC,IAAI,GAAG,IAAI;MACf,IAAI,CAACC,KAAK,GAAG,YAAW;QACvBD,IAAI,CAACE,MAAM,CAAC,CAAC;MACd,CAAC;IACF;;IAEA;AACD;AACA;AACA;IACCX,SAAS,CAACY,SAAS,CAACC,OAAO,GAAG,UAASC,IAAI,EAAE;MAC5C,IAAI,CAACV,MAAM,CAAC,IAAI,CAACE,SAAS,EAAE,CAAC,GAAGQ,IAAI;MACpC,IAAI,CAACC,GAAG,CAAC,CAAC;IACX,CAAC;;IAED;AACD;AACA;AACA;IACCf,SAAS,CAACY,SAAS,CAACI,UAAU,GAAG,UAASF,IAAI,EAAE;MAC/C,IAAI,CAACP,WAAW,CAAC,IAAI,CAACC,cAAc,EAAE,CAAC,GAAGM,IAAI;MAC9C,IAAI,CAACC,GAAG,CAAC,CAAC;IACX,CAAC;IAEDf,SAAS,CAACY,SAAS,CAACG,GAAG,GAAG,YAAW;MACpC,IAAI,CAAC,IAAI,CAACZ,QAAQ,EAAE;QACnB,IAAI,CAACA,QAAQ,GAAG,IAAI;QACpB,IAAI,CAACD,MAAM,CAAC,IAAI,CAACQ,KAAK,CAAC;MACxB;IACD,CAAC;;IAED;AACD;AACA;IACCV,SAAS,CAACY,SAAS,CAACD,MAAM,GAAG,YAAW;MACvC,IAAIM,CAAC,GAAG,CAAC;MACT,OAAOA,CAAC,GAAG,IAAI,CAACX,SAAS,EAAE,EAAEW,CAAC,EAAE;QAC/B,IAAI,CAACb,MAAM,CAACa,CAAC,CAAC,CAACF,GAAG,CAAC,CAAC;QACpB,IAAI,CAACX,MAAM,CAACa,CAAC,CAAC,GAAG,KAAK,CAAC;MACxB;MAEA,IAAI,CAACX,SAAS,GAAG,CAAC;MAClB,IAAI,CAACH,QAAQ,GAAG,KAAK;MAErB,KAAKc,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACT,cAAc,EAAE,EAAES,CAAC,EAAE;QACzC,IAAI,CAACV,WAAW,CAACU,CAAC,CAAC,CAACF,GAAG,CAAC,CAAC;QACzB,IAAI,CAACR,WAAW,CAACU,CAAC,CAAC,GAAG,KAAK,CAAC;MAC7B;MAEA,IAAI,CAACT,cAAc,GAAG,CAAC;IACxB,CAAC;IAED,OAAOR,SAAS;EAEjB,CAAC,CAAC;AACF,CAAC,EAAC,OAAOD,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACmB,GAAG,GAAGnB,MAAM,GAAG,UAASoB,OAAO,EAAE;EAAEC,MAAM,CAACC,OAAO,GAAGF,OAAO,CAAC,CAAC;AAAE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}