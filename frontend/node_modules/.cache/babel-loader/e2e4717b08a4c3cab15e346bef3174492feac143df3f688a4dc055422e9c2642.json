{"ast":null,"code":"var _jsxFileName = \"/home/jp228/Desktop/frontend/src/App.js\",\n  _s = $RefreshSig$();\n//import './App.css';\n//import './publisher.js'\n\n/*function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n    </div>\n  );\n}*/\n\nimport React, { useState } from 'react';\nimport amqp from 'amqp-connection-manager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const handleInputChange = e => {\n    setMessage(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Replace with your RabbitMQ server information\n    const connection = amqp.connect(['amqp://guest:guest@192.168.192.1:15672']);\n    const channelWrapper = connection.createChannel({\n      json: true,\n      setup: channel => channel.assertQueue('your_queue_name')\n    });\n    try {\n      await channelWrapper.sendToQueue('your_queue_name', {\n        message\n      });\n      console.log('Message sent:', message);\n    } catch (err) {\n      console.error('Error sending message:', err);\n    } finally {\n      await channelWrapper.close();\n      await connection.close();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Message:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n//export default RabbitMQForm;\n_s(App, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","amqp","jsxDEV","_jsxDEV","App","_s","message","setMessage","handleInputChange","e","target","value","handleSubmit","preventDefault","connection","connect","channelWrapper","createChannel","json","setup","channel","assertQueue","sendToQueue","console","log","err","error","close","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jp228/Desktop/frontend/src/App.js"],"sourcesContent":["//import './App.css';\n//import './publisher.js'\n\n/*function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n    </div>\n  );\n}*/\n\nimport React, { useState } from 'react';\nimport amqp from 'amqp-connection-manager';\n\nconst App = () => {\n  const [message, setMessage] = useState('');\n\n  const handleInputChange = (e) => {\n    setMessage(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Replace with your RabbitMQ server information\n    const connection = amqp.connect(['amqp://guest:guest@192.168.192.1:15672']);\n    const channelWrapper = connection.createChannel({\n      json: true,\n      setup: (channel) => channel.assertQueue('your_queue_name'),\n    });\n\n    try {\n      await channelWrapper.sendToQueue('your_queue_name', { message });\n      console.log('Message sent:', message);\n    } catch (err) {\n      console.error('Error sending message:', err);\n    } finally {\n      await channelWrapper.close();\n      await connection.close();\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Message:\n          <input type=\"text\" value={message} onChange={handleInputChange} />\n        </label>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\n//export default RabbitMQForm;\n\n\nexport default App;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMQ,iBAAiB,GAAIC,CAAC,IAAK;IAC/BF,UAAU,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,UAAU,GAAGb,IAAI,CAACc,OAAO,CAAC,CAAC,wCAAwC,CAAC,CAAC;IAC3E,MAAMC,cAAc,GAAGF,UAAU,CAACG,aAAa,CAAC;MAC9CC,IAAI,EAAE,IAAI;MACVC,KAAK,EAAGC,OAAO,IAAKA,OAAO,CAACC,WAAW,CAAC,iBAAiB;IAC3D,CAAC,CAAC;IAEF,IAAI;MACF,MAAML,cAAc,CAACM,WAAW,CAAC,iBAAiB,EAAE;QAAEhB;MAAQ,CAAC,CAAC;MAChEiB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAElB,OAAO,CAAC;IACvC,CAAC,CAAC,OAAOmB,GAAG,EAAE;MACZF,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAED,GAAG,CAAC;IAC9C,CAAC,SAAS;MACR,MAAMT,cAAc,CAACW,KAAK,CAAC,CAAC;MAC5B,MAAMb,UAAU,CAACa,KAAK,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,oBACExB,OAAA;IAAAyB,QAAA,eACEzB,OAAA;MAAM0B,QAAQ,EAAEjB,YAAa;MAAAgB,QAAA,gBAC3BzB,OAAA;QAAAyB,QAAA,GAAO,UAEL,eAAAzB,OAAA;UAAO2B,IAAI,EAAC,MAAM;UAACnB,KAAK,EAAEL,OAAQ;UAACyB,QAAQ,EAAEvB;QAAkB;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC,eACRhC,OAAA;QAAQ2B,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;;AAED;AAAA9B,EAAA,CAzCMD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AA4CT,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}