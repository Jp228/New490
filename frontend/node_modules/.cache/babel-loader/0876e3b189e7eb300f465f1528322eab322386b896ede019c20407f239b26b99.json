{"ast":null,"code":"var _jsxFileName = \"/home/jp228/Desktop/frontend/src/App.js\",\n  _s = $RefreshSig$();\n//import './App.css';\n//import './publisher.js'\n\n/*function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n    </div>\n  );\n}*/\n\nimport React, { useState } from 'react';\nimport { Connection } from 'amqp-ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [status, setStatus] = useState('');\n  const handleSendMessage = async () => {\n    try {\n      // Replace 'amqp://guest:guest@localhost:5672' with your RabbitMQ connection URL\n      const connection = new Connection('amqp://guest:guest@192.168.192.1:5672');\n\n      // Replace 'your_queue_name' with the name of your RabbitMQ queue\n      const queue = connection.declareQueue('your_queue_name');\n\n      // Send the message to the queue\n      queue.send(new Date() + ': ' + message);\n      setStatus('Message sent successfully!');\n\n      // Close the connection after sending the message\n      connection.close();\n    } catch (error) {\n      console.error('Error sending message:', error.message);\n      setStatus('Error sending message');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"RabbitMQ Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Message:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n//export default RabbitMQForm;\n_s(App, \"hpxjZsr7tUTAk4871OX86w/kbD4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Connection","jsxDEV","_jsxDEV","App","_s","message","setMessage","status","setStatus","handleSendMessage","connection","queue","declareQueue","send","Date","close","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/jp228/Desktop/frontend/src/App.js"],"sourcesContent":["//import './App.css';\n//import './publisher.js'\n\n\n/*function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n    </div>\n  );\n}*/\n\nimport React, { useState } from 'react';\nimport { Connection } from 'amqp-ts';\n\nconst App = () => {\n  const [message, setMessage] = useState('');\n  const [status, setStatus] = useState('');\n\n  const handleSendMessage = async () => {\n    try {\n      // Replace 'amqp://guest:guest@localhost:5672' with your RabbitMQ connection URL\n      const connection = new Connection('amqp://guest:guest@192.168.192.1:5672');\n      \n      // Replace 'your_queue_name' with the name of your RabbitMQ queue\n      const queue = connection.declareQueue('your_queue_name');\n      \n      // Send the message to the queue\n      queue.send(new Date() + ': ' + message);\n      \n      setStatus('Message sent successfully!');\n      \n      // Close the connection after sending the message\n      connection.close();\n    } catch (error) {\n      console.error('Error sending message:', error.message);\n      setStatus('Error sending message');\n    }\n  };\n\n  return (\n    <div>\n      <h1>RabbitMQ Form</h1>\n      <label>\n        Message:\n        <input type=\"text\" value={message} onChange={(e) => setMessage(e.target.value)} />\n      </label>\n      <button onClick={handleSendMessage}>Submit</button>\n      <p>Status: {status}</p>\n    </div>\n  );\n};\n\n//export default RabbitMQForm;\n\n\n\nexport default App;\n"],"mappings":";;AAAA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF;MACA,MAAMC,UAAU,GAAG,IAAIV,UAAU,CAAC,uCAAuC,CAAC;;MAE1E;MACA,MAAMW,KAAK,GAAGD,UAAU,CAACE,YAAY,CAAC,iBAAiB,CAAC;;MAExD;MACAD,KAAK,CAACE,IAAI,CAAC,IAAIC,IAAI,CAAC,CAAC,GAAG,IAAI,GAAGT,OAAO,CAAC;MAEvCG,SAAS,CAAC,4BAA4B,CAAC;;MAEvC;MACAE,UAAU,CAACK,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACX,OAAO,CAAC;MACtDG,SAAS,CAAC,uBAAuB,CAAC;IACpC;EACF,CAAC;EAED,oBACEN,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBpB,OAAA;MAAAgB,QAAA,GAAO,UAEL,eAAAhB,OAAA;QAAOqB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEnB,OAAQ;QAACoB,QAAQ,EAAGC,CAAC,IAAKpB,UAAU,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CAAC,eACRpB,OAAA;MAAQ0B,OAAO,EAAEnB,iBAAkB;MAAAS,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnDpB,OAAA;MAAAgB,QAAA,GAAG,UAAQ,EAACX,MAAM;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV,CAAC;;AAED;AAAAlB,EAAA,CAtCMD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA0CT,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}