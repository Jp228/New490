{"ast":null,"code":"/**\n * profiler.js: TODO: add file header description.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\n/**\n * TODO: add class description.\n * @type {Profiler}\n * @private\n */\nclass Profiler {\n  /**\n   * Constructor function for the Profiler instance used by\n   * `Logger.prototype.startTimer`. When done is called the timer will finish\n   * and log the duration.\n   * @param {!Logger} logger - TODO: add param description.\n   * @private\n   */\n  constructor(logger) {\n    const Logger = require('./logger');\n    if (typeof logger !== 'object' || Array.isArray(logger) || !(logger instanceof Logger)) {\n      throw new Error('Logger is required for profiling');\n    } else {\n      this.logger = logger;\n      this.start = Date.now();\n    }\n  }\n\n  /**\n   * Ends the current timer (i.e. Profiler) instance and logs the `msg` along\n   * with the duration since creation.\n   * @returns {mixed} - TODO: add return description.\n   * @private\n   */\n  done(...args) {\n    if (typeof args[args.length - 1] === 'function') {\n      // eslint-disable-next-line no-console\n      console.warn('Callback function no longer supported as of winston@3.0.0');\n      args.pop();\n    }\n    const info = typeof args[args.length - 1] === 'object' ? args.pop() : {};\n    info.level = info.level || 'info';\n    info.durationMs = Date.now() - this.start;\n    return this.logger.write(info);\n  }\n}\n;\nmodule.exports = Profiler;","map":{"version":3,"names":["Profiler","constructor","logger","Logger","require","Array","isArray","Error","start","Date","now","done","args","length","console","warn","pop","info","level","durationMs","write","module","exports"],"sources":["/home/jp228/node_modules/winston/lib/winston/profiler.js"],"sourcesContent":["/**\n * profiler.js: TODO: add file header description.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n/**\n * TODO: add class description.\n * @type {Profiler}\n * @private\n */\nclass Profiler {\n  /**\n   * Constructor function for the Profiler instance used by\n   * `Logger.prototype.startTimer`. When done is called the timer will finish\n   * and log the duration.\n   * @param {!Logger} logger - TODO: add param description.\n   * @private\n   */\n  constructor(logger) {\n    const Logger = require('./logger');\n    if (typeof logger !== 'object' || Array.isArray(logger) || !(logger instanceof Logger)) {\n      throw new Error('Logger is required for profiling');\n    } else {\n      this.logger = logger;\n      this.start = Date.now();\n    }\n  }\n\n  /**\n   * Ends the current timer (i.e. Profiler) instance and logs the `msg` along\n   * with the duration since creation.\n   * @returns {mixed} - TODO: add return description.\n   * @private\n   */\n  done(...args) {\n    if (typeof args[args.length - 1] === 'function') {\n      // eslint-disable-next-line no-console\n      console.warn('Callback function no longer supported as of winston@3.0.0');\n      args.pop();\n    }\n\n    const info = typeof args[args.length - 1] === 'object' ? args.pop() : {};\n    info.level = info.level || 'info';\n    info.durationMs = (Date.now()) - this.start;\n\n    return this.logger.write(info);\n  }\n};\n\nmodule.exports = Profiler;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA,MAAMA,QAAQ,CAAC;EACb;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,WAAWA,CAACC,MAAM,EAAE;IAClB,MAAMC,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;IAClC,IAAI,OAAOF,MAAM,KAAK,QAAQ,IAAIG,KAAK,CAACC,OAAO,CAACJ,MAAM,CAAC,IAAI,EAAEA,MAAM,YAAYC,MAAM,CAAC,EAAE;MACtF,MAAM,IAAII,KAAK,CAAC,kCAAkC,CAAC;IACrD,CAAC,MAAM;MACL,IAAI,CAACL,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACM,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IACzB;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,IAAIA,CAAC,GAAGC,IAAI,EAAE;IACZ,IAAI,OAAOA,IAAI,CAACA,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC,KAAK,UAAU,EAAE;MAC/C;MACAC,OAAO,CAACC,IAAI,CAAC,2DAA2D,CAAC;MACzEH,IAAI,CAACI,GAAG,CAAC,CAAC;IACZ;IAEA,MAAMC,IAAI,GAAG,OAAOL,IAAI,CAACA,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC,KAAK,QAAQ,GAAGD,IAAI,CAACI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACxEC,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACC,KAAK,IAAI,MAAM;IACjCD,IAAI,CAACE,UAAU,GAAIV,IAAI,CAACC,GAAG,CAAC,CAAC,GAAI,IAAI,CAACF,KAAK;IAE3C,OAAO,IAAI,CAACN,MAAM,CAACkB,KAAK,CAACH,IAAI,CAAC;EAChC;AACF;AAAC;AAEDI,MAAM,CAACC,OAAO,GAAGtB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}