{"ast":null,"code":"/**\n * winston.js: Top-level include defining Winston.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nconst logform = require('logform');\nconst {\n  warn\n} = require('./winston/common');\n\n/**\n * Expose version. Use `require` method for `webpack` support.\n * @type {string}\n */\nexports.version = require('../package.json').version;\n/**\n * Include transports defined by default by winston\n * @type {Array}\n */\nexports.transports = require('./winston/transports');\n/**\n * Expose utility methods\n * @type {Object}\n */\nexports.config = require('./winston/config');\n/**\n * Hoist format-related functionality from logform.\n * @type {Object}\n */\nexports.addColors = logform.levels;\n/**\n * Hoist format-related functionality from logform.\n * @type {Object}\n */\nexports.format = logform.format;\n/**\n * Expose core Logging-related prototypes.\n * @type {function}\n */\nexports.createLogger = require('./winston/create-logger');\n/**\n * Expose core Logging-related prototypes.\n * @type {function}\n */\nexports.Logger = require('./winston/logger');\n/**\n * Expose core Logging-related prototypes.\n * @type {Object}\n */\nexports.ExceptionHandler = require('./winston/exception-handler');\n/**\n * Expose core Logging-related prototypes.\n * @type {Object}\n */\nexports.RejectionHandler = require('./winston/rejection-handler');\n/**\n * Expose core Logging-related prototypes.\n * @type {Container}\n */\nexports.Container = require('./winston/container');\n/**\n * Expose core Logging-related prototypes.\n * @type {Object}\n */\nexports.Transport = require('winston-transport');\n/**\n * We create and expose a default `Container` to `winston.loggers` so that the\n * programmer may manage multiple `winston.Logger` instances without any\n * additional overhead.\n * @example\n *   // some-file1.js\n *   const logger = require('winston').loggers.get('something');\n *\n *   // some-file2.js\n *   const logger = require('winston').loggers.get('something');\n */\nexports.loggers = new exports.Container();\n\n/**\n * We create and expose a 'defaultLogger' so that the programmer may do the\n * following without the need to create an instance of winston.Logger directly:\n * @example\n *   const winston = require('winston');\n *   winston.log('info', 'some message');\n *   winston.error('some error');\n */\nconst defaultLogger = exports.createLogger();\n\n// Pass through the target methods onto `winston.\nObject.keys(exports.config.npm.levels).concat(['log', 'query', 'stream', 'add', 'remove', 'clear', 'profile', 'startTimer', 'handleExceptions', 'unhandleExceptions', 'handleRejections', 'unhandleRejections', 'configure', 'child']).forEach(method => exports[method] = (...args) => defaultLogger[method](...args));\n\n/**\n * Define getter / setter for the default logger level which need to be exposed\n * by winston.\n * @type {string}\n */\nObject.defineProperty(exports, 'level', {\n  get() {\n    return defaultLogger.level;\n  },\n  set(val) {\n    defaultLogger.level = val;\n  }\n});\n\n/**\n * Define getter for `exceptions` which replaces `handleExceptions` and\n * `unhandleExceptions`.\n * @type {Object}\n */\nObject.defineProperty(exports, 'exceptions', {\n  get() {\n    return defaultLogger.exceptions;\n  }\n});\n\n/**\n * Define getter for `rejections` which replaces `handleRejections` and\n * `unhandleRejections`.\n * @type {Object}\n */\nObject.defineProperty(exports, 'rejections', {\n  get() {\n    return defaultLogger.rejections;\n  }\n});\n\n/**\n * Define getters / setters for appropriate properties of the default logger\n * which need to be exposed by winston.\n * @type {Logger}\n */\n['exitOnError'].forEach(prop => {\n  Object.defineProperty(exports, prop, {\n    get() {\n      return defaultLogger[prop];\n    },\n    set(val) {\n      defaultLogger[prop] = val;\n    }\n  });\n});\n\n/**\n * The default transports and exceptionHandlers for the default winston logger.\n * @type {Object}\n */\nObject.defineProperty(exports, 'default', {\n  get() {\n    return {\n      exceptionHandlers: defaultLogger.exceptionHandlers,\n      rejectionHandlers: defaultLogger.rejectionHandlers,\n      transports: defaultLogger.transports\n    };\n  }\n});\n\n// Have friendlier breakage notices for properties that were exposed by default\n// on winston < 3.0.\nwarn.deprecated(exports, 'setLevels');\nwarn.forFunctions(exports, 'useFormat', ['cli']);\nwarn.forProperties(exports, 'useFormat', ['padLevels', 'stripColors']);\nwarn.forFunctions(exports, 'deprecated', ['addRewriter', 'addFilter', 'clone', 'extend']);\nwarn.forProperties(exports, 'deprecated', ['emitErrs', 'levelLength']);","map":{"version":3,"names":["logform","require","warn","exports","version","transports","config","addColors","levels","format","createLogger","Logger","ExceptionHandler","RejectionHandler","Container","Transport","loggers","defaultLogger","Object","keys","npm","concat","forEach","method","args","defineProperty","get","level","set","val","exceptions","rejections","prop","exceptionHandlers","rejectionHandlers","deprecated","forFunctions","forProperties"],"sources":["/home/jp228/node_modules/winston/lib/winston.js"],"sourcesContent":["/**\n * winston.js: Top-level include defining Winston.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nconst logform = require('logform');\nconst { warn } = require('./winston/common');\n\n/**\n * Expose version. Use `require` method for `webpack` support.\n * @type {string}\n */\nexports.version = require('../package.json').version;\n/**\n * Include transports defined by default by winston\n * @type {Array}\n */\nexports.transports = require('./winston/transports');\n/**\n * Expose utility methods\n * @type {Object}\n */\nexports.config = require('./winston/config');\n/**\n * Hoist format-related functionality from logform.\n * @type {Object}\n */\nexports.addColors = logform.levels;\n/**\n * Hoist format-related functionality from logform.\n * @type {Object}\n */\nexports.format = logform.format;\n/**\n * Expose core Logging-related prototypes.\n * @type {function}\n */\nexports.createLogger = require('./winston/create-logger');\n/**\n * Expose core Logging-related prototypes.\n * @type {function}\n */\nexports.Logger = require('./winston/logger');\n/**\n * Expose core Logging-related prototypes.\n * @type {Object}\n */\nexports.ExceptionHandler = require('./winston/exception-handler');\n/**\n * Expose core Logging-related prototypes.\n * @type {Object}\n */\nexports.RejectionHandler = require('./winston/rejection-handler');\n/**\n * Expose core Logging-related prototypes.\n * @type {Container}\n */\nexports.Container = require('./winston/container');\n/**\n * Expose core Logging-related prototypes.\n * @type {Object}\n */\nexports.Transport = require('winston-transport');\n/**\n * We create and expose a default `Container` to `winston.loggers` so that the\n * programmer may manage multiple `winston.Logger` instances without any\n * additional overhead.\n * @example\n *   // some-file1.js\n *   const logger = require('winston').loggers.get('something');\n *\n *   // some-file2.js\n *   const logger = require('winston').loggers.get('something');\n */\nexports.loggers = new exports.Container();\n\n/**\n * We create and expose a 'defaultLogger' so that the programmer may do the\n * following without the need to create an instance of winston.Logger directly:\n * @example\n *   const winston = require('winston');\n *   winston.log('info', 'some message');\n *   winston.error('some error');\n */\nconst defaultLogger = exports.createLogger();\n\n// Pass through the target methods onto `winston.\nObject.keys(exports.config.npm.levels)\n  .concat([\n    'log',\n    'query',\n    'stream',\n    'add',\n    'remove',\n    'clear',\n    'profile',\n    'startTimer',\n    'handleExceptions',\n    'unhandleExceptions',\n    'handleRejections',\n    'unhandleRejections',\n    'configure',\n    'child'\n  ])\n  .forEach(\n    method => (exports[method] = (...args) => defaultLogger[method](...args))\n  );\n\n/**\n * Define getter / setter for the default logger level which need to be exposed\n * by winston.\n * @type {string}\n */\nObject.defineProperty(exports, 'level', {\n  get() {\n    return defaultLogger.level;\n  },\n  set(val) {\n    defaultLogger.level = val;\n  }\n});\n\n/**\n * Define getter for `exceptions` which replaces `handleExceptions` and\n * `unhandleExceptions`.\n * @type {Object}\n */\nObject.defineProperty(exports, 'exceptions', {\n  get() {\n    return defaultLogger.exceptions;\n  }\n});\n\n/**\n * Define getter for `rejections` which replaces `handleRejections` and\n * `unhandleRejections`.\n * @type {Object}\n */\nObject.defineProperty(exports, 'rejections', {\n  get() {\n    return defaultLogger.rejections;\n  }\n});\n\n/**\n * Define getters / setters for appropriate properties of the default logger\n * which need to be exposed by winston.\n * @type {Logger}\n */\n['exitOnError'].forEach(prop => {\n  Object.defineProperty(exports, prop, {\n    get() {\n      return defaultLogger[prop];\n    },\n    set(val) {\n      defaultLogger[prop] = val;\n    }\n  });\n});\n\n/**\n * The default transports and exceptionHandlers for the default winston logger.\n * @type {Object}\n */\nObject.defineProperty(exports, 'default', {\n  get() {\n    return {\n      exceptionHandlers: defaultLogger.exceptionHandlers,\n      rejectionHandlers: defaultLogger.rejectionHandlers,\n      transports: defaultLogger.transports\n    };\n  }\n});\n\n// Have friendlier breakage notices for properties that were exposed by default\n// on winston < 3.0.\nwarn.deprecated(exports, 'setLevels');\nwarn.forFunctions(exports, 'useFormat', ['cli']);\nwarn.forProperties(exports, 'useFormat', ['padLevels', 'stripColors']);\nwarn.forFunctions(exports, 'deprecated', [\n  'addRewriter',\n  'addFilter',\n  'clone',\n  'extend'\n]);\nwarn.forProperties(exports, 'deprecated', ['emitErrs', 'levelLength']);\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}