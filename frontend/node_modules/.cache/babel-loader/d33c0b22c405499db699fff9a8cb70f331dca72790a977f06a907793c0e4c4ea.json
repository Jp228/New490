{"ast":null,"code":"var _jsxFileName = \"/home/jp228/Desktop/New490/frontend/src/login.jsx\",\n  _s = $RefreshSig$();\n// // Login.jsx\n// import React, { useState } from 'react';\n// import './style.css'; // Adjust the path as needed\n\n// const Login = ({ onLogin }) => {\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n//         // Implement your login logic here\n//         // For now, we'll just call onLogin with the username and password\n//         onLogin(username, password);\n//     };\n\n//     return (\n//         <div className=\"login-container\">\n//             <form className=\"login-form\" onSubmit={handleSubmit}>\n//                 <h2>Login to Your Account</h2>\n//                 <div className=\"form-control\">\n//                     <label htmlFor=\"username\">Username</label>\n//                     <input type=\"text\" id=\"username\" name=\"username\" required value={username} onChange={(e) => setUsername(e.target.value)} />\n//                 </div>\n//                 <div className=\"form-control\">\n//                     <label htmlFor=\"password\">Password</label>\n//                     <input type=\"password\" id=\"password\" name=\"password\" required value={password} onChange={(e) => setPassword(e.target.value)} />\n//                 </div>\n//                 <button type=\"submit\">Login</button>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport './style.css'; // Adjust the path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [isLoginForm, setIsLoginForm] = useState(true); // New state to toggle between forms\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  // Registration form state\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [registerPassword, setRegisterPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [age, setAge] = useState('');\n  const [location, setLocation] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (isLoginForm) {\n      onLogin(username, password);\n    } else {\n      // Here, implement your registration logic\n      console.log(\"Registration form submitted\");\n      // Reset form or navigate user as needed\n    }\n  };\n  const toggleForm = () => {\n    setIsLoginForm(!isLoginForm);\n  };\n  if (isLoginForm) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login to Your Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: toggleForm,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registration-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"registration-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Register a New Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: toggleForm,\n          children: \"Back to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s(Login, \"za0HrxhepRhUChfUZsSMi8Ernns=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","onLogin","_s","isLoginForm","setIsLoginForm","username","setUsername","password","setPassword","firstName","setFirstName","lastName","setLastName","email","setEmail","registerPassword","setRegisterPassword","confirmPassword","setConfirmPassword","age","setAge","location","setLocation","handleSubmit","event","preventDefault","console","log","toggleForm","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/home/jp228/Desktop/New490/frontend/src/login.jsx"],"sourcesContent":["// // Login.jsx\n// import React, { useState } from 'react';\n// import './style.css'; // Adjust the path as needed\n\n\n// const Login = ({ onLogin }) => {\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n//         // Implement your login logic here\n//         // For now, we'll just call onLogin with the username and password\n//         onLogin(username, password);\n//     };\n\n//     return (\n//         <div className=\"login-container\">\n//             <form className=\"login-form\" onSubmit={handleSubmit}>\n//                 <h2>Login to Your Account</h2>\n//                 <div className=\"form-control\">\n//                     <label htmlFor=\"username\">Username</label>\n//                     <input type=\"text\" id=\"username\" name=\"username\" required value={username} onChange={(e) => setUsername(e.target.value)} />\n//                 </div>\n//                 <div className=\"form-control\">\n//                     <label htmlFor=\"password\">Password</label>\n//                     <input type=\"password\" id=\"password\" name=\"password\" required value={password} onChange={(e) => setPassword(e.target.value)} />\n//                 </div>\n//                 <button type=\"submit\">Login</button>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default Login;\n\n\n\n\n\n\n\n\nimport React, { useState } from 'react';\nimport './style.css'; // Adjust the path as needed\n\nconst Login = ({ onLogin }) => {\n    const [isLoginForm, setIsLoginForm] = useState(true); // New state to toggle between forms\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    // Registration form state\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [registerPassword, setRegisterPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [age, setAge] = useState('');\n    const [location, setLocation] = useState('');\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (isLoginForm) {\n            onLogin(username, password);\n        } else {\n            // Here, implement your registration logic\n            console.log(\"Registration form submitted\");\n            // Reset form or navigate user as needed\n        }\n    };\n\n    const toggleForm = () => {\n        setIsLoginForm(!isLoginForm);\n    };\n\n    if (isLoginForm) {\n        return (\n            <div className=\"login-container\">\n                {/* Login Form */}\n                <form className=\"login-form\" onSubmit={handleSubmit}>\n                    <h2>Login to Your Account</h2>\n                    {/* Username & Password Fields */}\n                    <button type=\"submit\">Login</button>\n                    <button type=\"button\" onClick={toggleForm}>Register</button>\n                </form>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"registration-container\">\n                {/* Registration Form */}\n                <form className=\"registration-form\" onSubmit={handleSubmit}>\n                    <h2>Register a New Account</h2>\n                    {/* Registration Fields */}\n                    <button type=\"submit\">Register</button>\n                    <button type=\"button\" onClick={toggleForm}>Back to Login</button>\n                </form>\n            </div>\n        );\n    }\n};\n\nexport default Login;\n"],"mappings":";;AAAA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C;EACA,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACoB,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACsB,GAAG,EAAEC,MAAM,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM0B,YAAY,GAAIC,KAAK,IAAK;IAC5BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAItB,WAAW,EAAE;MACbF,OAAO,CAACI,QAAQ,EAAEE,QAAQ,CAAC;IAC/B,CAAC,MAAM;MACH;MACAmB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1C;IACJ;EACJ,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrBxB,cAAc,CAAC,CAACD,WAAW,CAAC;EAChC,CAAC;EAED,IAAIA,WAAW,EAAE;IACb,oBACIJ,OAAA;MAAK8B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAE5B/B,OAAA;QAAM8B,SAAS,EAAC,YAAY;QAACE,QAAQ,EAAER,YAAa;QAAAO,QAAA,gBAChD/B,OAAA;UAAA+B,QAAA,EAAI;QAAqB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAE9BpC,OAAA;UAAQqC,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpCpC,OAAA;UAAQqC,IAAI,EAAC,QAAQ;UAACC,OAAO,EAAET,UAAW;UAAAE,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEd,CAAC,MAAM;IACH,oBACIpC,OAAA;MAAK8B,SAAS,EAAC,wBAAwB;MAAAC,QAAA,eAEnC/B,OAAA;QAAM8B,SAAS,EAAC,mBAAmB;QAACE,QAAQ,EAAER,YAAa;QAAAO,QAAA,gBACvD/B,OAAA;UAAA+B,QAAA,EAAI;QAAsB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAE/BpC,OAAA;UAAQqC,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvCpC,OAAA;UAAQqC,IAAI,EAAC,QAAQ;UAACC,OAAO,EAAET,UAAW;UAAAE,QAAA,EAAC;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEd;AACJ,CAAC;AAACjC,EAAA,CArDIF,KAAK;AAAAsC,EAAA,GAALtC,KAAK;AAuDX,eAAeA,KAAK;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}