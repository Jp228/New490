{"ast":null,"code":"var _jsxFileName = \"/home/jp228/Desktop/frontend/src/App.js\",\n  _s = $RefreshSig$();\n//import './App.css';\n//import './publisher.js'\n\n/*function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n    </div>\n  );\n}*/\n\n//export default App\n\nimport React, { useState } from 'react';\nimport * as Stomp from 'stompjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RabbitMQComponent = () => {\n  _s();\n  const [stompClient, setStompClient] = useState(null);\n  const [message, setMessage] = useState('');\n  const connect = () => {\n    const socket = new WebSocket('ws://192.168.192.1:15674/ws'); // Use your RabbitMQ Web-STOMP endpoint\n    const client = Stomp.over(socket);\n    const headers = {\n      login: \"admin\",\n      // default username\n      passcode: \"admin\" // default password\n      // additional header options can go here if needed\n    };\n    client.connect(headers, frame => {\n      console.log('Connected: ' + frame);\n      setStompClient(client);\n    }, error => {\n      console.error('Error connecting to RabbitMQ:', error);\n    });\n  };\n  const sendMessage = () => {\n    if (stompClient) {\n      stompClient.send(\"/queue/frontendQueue\", {}, JSON.stringify({\n        message: message\n      }));\n      console.log(\"Message sent: \", message);\n    } else {\n      console.log(\"Not connected to RabbitMQ\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connect,\n      children: \"Connect to RabbitMQ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(RabbitMQComponent, \"wYb5XJ2R4yjHi7+yHeqUAVQ2pS4=\");\n_c = RabbitMQComponent;\nexport default RabbitMQComponent;\nvar _c;\n$RefreshReg$(_c, \"RabbitMQComponent\");","map":{"version":3,"names":["React","useState","Stomp","jsxDEV","_jsxDEV","RabbitMQComponent","_s","stompClient","setStompClient","message","setMessage","connect","socket","WebSocket","client","over","headers","login","passcode","frame","console","log","error","sendMessage","send","JSON","stringify","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/jp228/Desktop/frontend/src/App.js"],"sourcesContent":["//import './App.css';\n//import './publisher.js'\n\n\n/*function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n    </div>\n  );\n}*/\n\n//export default App\n\n\nimport React, { useState } from 'react';\nimport * as Stomp from 'stompjs';\n\nconst RabbitMQComponent = () => {\n    const [stompClient, setStompClient] = useState(null);\n    const [message, setMessage] = useState('');\n\n    const connect = () => {\n        const socket = new WebSocket('ws://192.168.192.1:15674/ws'); // Use your RabbitMQ Web-STOMP endpoint\n        const client = Stomp.over(socket);\n        \n        const headers = {\n            login: \"admin\", // default username\n            passcode: \"admin\", // default password\n            // additional header options can go here if needed\n        };\n\n        client.connect(headers, frame => {\n            console.log('Connected: ' + frame);\n            setStompClient(client);\n        }, error => {\n            console.error('Error connecting to RabbitMQ:', error);\n        });\n    };\n\n    const sendMessage = () => {\n        if (stompClient) {\n            stompClient.send(\"/queue/frontendQueue\", {}, JSON.stringify({ message: message }));\n            console.log(\"Message sent: \", message);\n        } else {\n            console.log(\"Not connected to RabbitMQ\");\n        }\n    };\n\n    return (\n        <div>\n            <button onClick={connect}>Connect to RabbitMQ</button>\n            <input type=\"text\" value={message} onChange={(e) => setMessage(e.target.value)} />\n            <button onClick={sendMessage}>Send Message</button>\n        </div>\n    );\n};\n\nexport default RabbitMQComponent;\n"],"mappings":";;AAAA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAKC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,OAAO,GAAGA,CAAA,KAAM;IAClB,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,6BAA6B,CAAC,CAAC,CAAC;IAC7D,MAAMC,MAAM,GAAGZ,KAAK,CAACa,IAAI,CAACH,MAAM,CAAC;IAEjC,MAAMI,OAAO,GAAG;MACZC,KAAK,EAAE,OAAO;MAAE;MAChBC,QAAQ,EAAE,OAAO,CAAE;MACnB;IACJ,CAAC;IAEDJ,MAAM,CAACH,OAAO,CAACK,OAAO,EAAEG,KAAK,IAAI;MAC7BC,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGF,KAAK,CAAC;MAClCX,cAAc,CAACM,MAAM,CAAC;IAC1B,CAAC,EAAEQ,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACzD,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIhB,WAAW,EAAE;MACbA,WAAW,CAACiB,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEjB,OAAO,EAAEA;MAAQ,CAAC,CAAC,CAAC;MAClFW,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEZ,OAAO,CAAC;IAC1C,CAAC,MAAM;MACHW,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAC5C;EACJ,CAAC;EAED,oBACIjB,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MAAQwB,OAAO,EAAEjB,OAAQ;MAAAgB,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtD5B,OAAA;MAAO6B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEzB,OAAQ;MAAC0B,QAAQ,EAAGC,CAAC,IAAK1B,UAAU,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClF5B,OAAA;MAAQwB,OAAO,EAAEL,WAAY;MAAAI,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEd,CAAC;AAAC1B,EAAA,CAtCID,iBAAiB;AAAAiC,EAAA,GAAjBjC,iBAAiB;AAwCvB,eAAeA,iBAAiB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}